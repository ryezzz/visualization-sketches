{"version":3,"file":"component---src-pages-childhood-diary-binned-js-f3258e1db7bdd3e68373.js","mappings":"qKAAO,IAAMA,EAAiB,SAACC,GAAD,OAAQA,EAAKC,WAAWC,MAAM,GAAGC,KAAKC,Q,wECyHpE,UAxG6B,SAAC,GAAc,IANrBC,EAMSC,EAAW,EAAXA,KAC9B,GAA0BC,EAAAA,EAAAA,UAAS,KAA5BC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,KAA9BG,EAAP,KAAeC,EAAf,KAIMC,GAASC,EAAAA,EAAAA,UACTC,GAAaf,EAAAA,EAAAA,GAAgBO,GAC7BS,GAAgBC,EAAAA,EAAAA,GAAgBF,GAChCG,EAAaC,EAAAA,MAEhBC,OAAM,SAACC,GAAD,OAAOA,EAAEC,QACfC,YAlBkBjB,EAkBO,GAjBrB,SAACC,EAAMiB,EAAKC,GACjB,OAAON,EAAAA,MAAqBO,OAAO,CAACF,EAAKC,IAAME,MAAMrB,MAqBnDsB,EAAST,EAAAA,MAGVO,OAAOP,EAAAA,IAAUD,EAAWF,IAAgB,SAACK,EAAGQ,GAAJ,OAAUR,EAAES,GAAKD,EAAG,OAChEE,MAAM,CAjBU,EAiBGtB,EAlBP,IAoBTuB,EAASb,EAAAA,MAIZO,OAAOP,EAAAA,IAAUH,GAAe,SAACK,GAAD,OAAMA,EAAEY,qBACxCF,MAAM,CAAC,EAAG,KAEEZ,EAAAA,MAEZe,KAAKf,EAAAA,IAAUH,GAAe,SAACK,GAAD,OAAMA,EAAEY,iBAAkBE,QAAQC,IAAI,eAAgBf,OAoBvF,OARAgB,EAAAA,WAAgB,WACd3B,EAASG,EAAOyB,QAAQC,aACxB3B,EAAUC,EAAOyB,QAAQE,cACzBC,OAAOC,SAAW,SAAUC,GAC1BjC,EAASG,EAAOyB,QAAQC,gBAEzB,CAAC9B,IAGF,gCACE,uBACEmC,IAAK/B,EACLgC,MAAO,CAAEC,OAAQ,kBAAmBrC,MAAO,MAAOE,OAAQ,UAE3DO,EAAWF,GAAe+B,KAAI,SAAC1B,EAAGQ,GAAJ,OAI7B,qBAAGmB,UAAS,cAAgBpB,EAAOP,EAAES,IAAzB,KAAiCnB,EAAjC,KAOTU,EAAE0B,KAAI,SAACE,EAAIC,GAAL,OACL,0BACEC,EAAGnB,EAAOiB,EAAGhB,kBACbmB,KAAK,QACLC,IAAKJ,EAAG3B,KAAMM,EAAOqB,EAAG3B,OAExBgC,IAAU,EAANJ","sources":["webpack://visualization-sketches/./src/consts/childhoodDiaryConsts.js","webpack://visualization-sketches/./src/pages/childhood-diary-binned.js"],"sourcesContent":["export const unNestDiaryData =(elem)=>elem.allDataCsv.edges[0].node.items\n// .allDataCsv.edges[0].node.items\n","// FIGURING OUT YSCALE FOR STACKED ELEMENTS\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { graphql } from \"gatsby\";\nimport \"../styles.css\";\nimport { isBrowser } from \"../utils/staticRendering\";\nimport { unNestDiaryData } from \"../consts/childhoodDiaryConsts\";\nimport { formatDataFunct } from \"../utils/childhoodDiaryUtils\";\nimport * as d3 from \"d3\";\nimport { bin } from \"d3\";\n\nfunction thresholdTime(n) {\n  return (data, min, max) => {\n    return d3.scaleSequential().domain([min, max]).ticks(n);\n  };\n}\n\nconst ChildhoodDiarySwarmed= ({ data }) => {\n  const [width, setWidth] = useState(10000);\n  const [height, setHeight] = useState(10000);\n  const margin = 0;\n  const marginLeft = 0;\n  const marginTop = 0;\n  const svgRef = useRef();\n  const unNestData = unNestDiaryData(data);\n  const formattedData = formatDataFunct(unNestData);\n  const binnedData = d3\n    .bin()\n    .value((d) => d.week)\n    .thresholds(thresholdTime(20));\n\n\n\n\n  let xScale = d3\n    .scaleLinear()\n    // .domain(d3.extent(binnedData(formattedData), (d, i) => console.log(\"testingxscale\", d),  d.week))\n    .domain(d3.extent(binnedData(formattedData), (d, i) => d.x1 * i /15))\n    .range([marginLeft, width - margin]);\n\n    let rScale = d3\n    .scaleLinear()\n    // .domain(d3.extent(binnedData(formattedData), (d, i) => console.log(\"testingxscale\", d),  d.week))\n    // .domain(d3.extent(binnedData(formattedData), (d, i) => d.map((di,ii)=>di.entry_word_count)))\n    .domain(d3.extent(formattedData, (d)=> d.entry_word_count))\n    .range([1, 10])\n\n    let yScale = d3\n    .stack()\n    .keys(d3.extent(formattedData, (d)=>(d.entry_word_count, console.log(\"stackedScale\", d)))\n    )\n\n\n    // let stackedScale = d3.stack()\n    //     .keys(d3.extent(formattedData, (d)=> d.entry_word_count))\n\n\n// let pack = () => d3.pack()\n// .size([width, height])\n// .padding(1)\n\n  React.useEffect(() => {\n    setWidth(svgRef.current.clientWidth);\n    setHeight(svgRef.current.clientHeight);\n    window.onresize = function (event) {\n      setWidth(svgRef.current.clientWidth);\n    };\n  }, [width]);\n\n  return (\n    <>\n      <svg\n        ref={svgRef}\n        style={{ border: \"solid 2px white\", width: \"50%\", height: \"100vh\" }}\n      >\n      {binnedData(formattedData).map((d, i) => (\n        // <g transform={`translate(36 45.5)`}>\n\n\n        <g transform={`translate( ${xScale(d.x1)}  ${height})`}>\n          {/* {console.log(\"packed\", pack(d))} */}\n {/* {console.log( \"first stacked\", stackedScale(d.map((di,ii)=>di.entry_word_count)))} */}\n\n                  {/* {console.log(\"xscale\", xScale(d.x1))} */}\n                  {/* {console.log(\"xscale\", xScale(d.x1))} */}\n\n          {d.map((di, ii) => (\n            <circle\n              r={rScale(di.entry_word_count)}\n              fill=\"white\"\n              cx={(di.week, xScale(di.week))}\n              // cy={}\n              cy={ii * -7}\n\n\n            ></circle>\n          ))}\n        </g>\n        ))}\n      </svg>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query ChildhoodDiarySwarmedQuery {\n    allDataCsv {\n      edges {\n        node {\n          items {\n            date\n            formatted_date\n            entry_word_count\n            quarter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ChildhoodDiarySwarmed;\n"],"names":["unNestDiaryData","elem","allDataCsv","edges","node","items","n","data","useState","width","setWidth","height","setHeight","svgRef","useRef","unNestData","formattedData","formatDataFunct","binnedData","d3","value","d","week","thresholds","min","max","domain","ticks","xScale","i","x1","range","rScale","entry_word_count","keys","console","log","React","current","clientWidth","clientHeight","window","onresize","event","ref","style","border","map","transform","di","ii","r","fill","cx","cy"],"sourceRoot":""}