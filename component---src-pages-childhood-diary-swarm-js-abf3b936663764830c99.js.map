{"version":3,"file":"component---src-pages-childhood-diary-swarm-js-abf3b936663764830c99.js","mappings":"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","sources":["webpack://visualization-sketches/./src/consts/childhoodDiaryConsts.js","webpack://visualization-sketches/./src/components/BeeswarmSvg/index.js","webpack://visualization-sketches/./src/pages/childhood-diary-swarm.js","webpack://visualization-sketches/./src/utils/visualizationUtils.js"],"sourcesContent":["export const unNestDiaryData =(elem)=>elem.allDataCsv.edges[0].node.items\n// .allDataCsv.edges[0].node.items\n","import * as d3 from \"d3\";\nimport React from \"react\";\nimport { dodge } from \"../../utils/visualizationUtils\";\n\nconst BeeswarmSvg = (props) => {\n  const data = props.data;\n  const selectedDate = props.selectedDate;\n  const selectedValue = props.selectedValue;\n  const height = props.height;\n  const width = props.width;\n  const margin = props.margin;\n  const marginLeft = props.margin;\n  const marginTop = props.marginTop;\n  const marginBottom = props.marginTop;\n  const marginRight = props.marginRight;\n  const padding = 0;\n\n  let rScale = d3\n    .scaleLinear()\n    .domain(d3.extent(data, (d) => d[selectedValue]))\n    .range([1, height / 80]);\n\n  let x = d3\n    .scaleSequential()\n    .domain(d3.extent(data, (d) => d[selectedDate]))\n    .range([marginLeft, width - marginRight]);\n\n  let r = (selectedValue) => rScale(selectedValue);\n\n  return (\n    <div>\n      <svg style={{ border: \"solid 2px white\", width: width, height: height }}>\n        <g width={width} height={height} transform={`translate(${10},${10})`}>\n          {dodge(data, props.selectedDate, props.selectedValue, x, r, 0).map(\n            (d, i) => (\n              <circle\n                cx={d.x}\n                cy={height - marginBottom - padding - d.y}\n                r={d.r}\n                fill=\"white\"\n              />\n            )\n          )}\n        </g>{\" \"}\n      </svg>\n    </div>\n  );\n};\n\nexport default BeeswarmSvg;\n","// FIGURING OUT YSCALE FOR STACKED ELEMENTS\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { graphql } from \"gatsby\";\nimport \"../styles.css\";\nimport { unNestDiaryData } from \"../consts/childhoodDiaryConsts\";\nimport { formatDataFunct } from \"../utils/childhoodDiaryUtils\";\nimport BeeswarmSvg from \"../components/BeeswarmSvg\";\n\nconst ChildhoodDiaryBinned = ({ data }) => {\n  const [width, setWidth] = useState(10000);\n  const [height, setHeight] = useState(10000);\n  const margin = 0;\n  const marginLeft = 100;\n  const marginRight= 100;\n\n  const marginTop = 0;\n  const containerRef = useRef();\n  const unNestData = unNestDiaryData(data);\n  const formattedData = formatDataFunct(unNestData);\n\n  useEffect(() => {\n    setWidth(containerRef.current.clientWidth);\n    setHeight(containerRef.current.clientHeight);\n    window.onresize = function () {\n      setWidth(containerRef.current.clientWidth);\n      setHeight(containerRef.current.clientHeight);\n\n    };\n  }, [width, height]);\n\n  return (\n    <div\n      ref={containerRef}\n      style={{ border: \"solid 2px white\", width: \"100%\", height: \"100vh\" }}\n    >\n      <BeeswarmSvg\n        selectedDate=\"week\"\n        selectedValue=\"entry_word_count\"\n        data={formattedData}\n        margin={margin}\n        marginLeft={marginLeft}\n        marginTop={marginTop}\n        marginRight={marginRight}\n        width={width}\n        height={height}\n      />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query ChildhoodDiaryBinnedQuery {\n    allDataCsv {\n      edges {\n        node {\n          items {\n            date\n            formatted_date\n            entry_word_count\n            quarter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ChildhoodDiaryBinned;\n","export const dodge = (data, selectedDateI, selectedValueI, xScaleI, rScaleI, paddingI) => {\n  const circles = data\n    .map((d) => ({ x: xScaleI(d[selectedDateI]), r: rScaleI(d[selectedValueI]), data: d }))\n    .sort((b, a) => b.data.formatted_date - a.data.formatted_date);\n\n  const epsilon = 1e-3;\n  let head = null,\n    tail = null,\n    queue = null;\n\n  //   // Returns true if circle ⟨x,y⟩ intersects with any circle in the queue.\n  function intersects(x, y, r) {\n    let a = head;\n    while (a) {\n      const radius2 = (a.r + r + paddingI) ** 2;\n      if (radius2 - epsilon > (a.x - x) ** 2 + (a.y - y) ** 2) {\n        return true;\n      }\n      a = a.next;\n    }\n    return false;\n  }\n\n  //   // Place each circle sequentially.\n  for (const b of circles) {\n    //     // Choose the minimum non-intersecting tangent.\n    if (intersects(b.x, (b.y = b.r), b.r)) {\n      let a = head;\n      b.y = Infinity;\n      do {\n        let y =\n          a.y + Math.sqrt((a.r + b.r + paddingI) ** 2 - (a.x - b.x) ** 2);\n        if (y < b.y && !intersects(b.x, y, b.r)) b.y = y;\n        a = a.next;\n      } while (a);\n    }\n\n    //     // Add b to the queue.\n    b.next = null;\n    if (head === null) {\n      head = tail = b;\n      queue = head;\n    } else tail = tail.next = b;\n  }\n\n  return circles;\n};\n"],"names":["unNestDiaryData","elem","allDataCsv","edges","node","items","props","data","selectedDate","selectedValue","height","width","marginLeft","margin","marginBottom","marginTop","marginRight","rScale","d3","domain","d","range","x","style","border","transform","dodge","map","i","cx","cy","y","r","fill","useState","setWidth","setHeight","containerRef","useRef","unNestData","formattedData","formatDataFunct","useEffect","current","clientWidth","clientHeight","window","onresize","ref","selectedDateI","selectedValueI","xScaleI","rScaleI","paddingI","circles","sort","b","a","formatted_date","head","tail","intersects","next","Infinity","Math","sqrt"],"sourceRoot":""}