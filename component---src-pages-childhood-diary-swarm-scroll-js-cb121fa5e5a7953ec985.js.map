{"version":3,"file":"component---src-pages-childhood-diary-swarm-scroll-js-cb121fa5e5a7953ec985.js","mappings":"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","sources":["webpack://visualization-sketches/./src/components/ScrollySwarm/index.js","webpack://visualization-sketches/./src/pages/childhood-diary-swarm-scroll.js","webpack://visualization-sketches/./src/utils/visualizationUtils.js"],"sourcesContent":["// To fix canvas blurryness I used this: https://stackoverflow.com/questions/48961797/canvas-circle-looks-blurry\nimport { useEffect, useRef } from \"react\";\nimport { Delaunay } from \"d3-delaunay\";\nimport * as d3 from \"d3\";\nimport React from \"react\";\nimport { gsap } from \"gsap\";\nimport { isBrowser } from \"../../utils/staticRendering\";\nimport { dodge } from \"../../utils/visualizationUtils\";\n\nconst ScrollySwarm = (props) => {\n  // const [pixelRatio, setPixelRatio] = useState(2);\n\n  const pixelRatio = props.pixelRatio;\n\n  const destinationParticles = [];\n  const originParticles = [];\n  let height = props.height;\n  let width = props.width;\n  let margin = props.margin;\n  let marginLeft = props.marginLeft;\n  let marginTop = props.marginTop;\n  let particles = props.particles;\n  let ref = useRef();\n  let highlightRef = useRef();\n  let axisRef = useRef();\n  const radius = 8;\n  ////MOVE TO HOOKS\n  const usePrevious = (value, defaultRef) => {\n    const ref = useRef(defaultRef);\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n\n  const prevDate = usePrevious(props.dateSelection, \"year\");\n\n  let rScale = d3\n    .scaleLinear()\n    .domain(d3.extent(particles, (d) => d[props.valueSelection]))\n    .range([1, height / 80]);\n\n  let x = (incomingData, prevOrCurrent) => d3\n      .scaleSequential()\n      .domain(d3.extent(particles, (d) => d[prevOrCurrent]))\n      .range([marginLeft, width - 0]);\n\n  let r = (selectedValue) => rScale(selectedValue);\n\n  const dodgedParticlesOrigin = dodge(\n    particles,\n    prevDate,\n    props.valueSelection,\n    x(particles, prevDate),\n    r,\n    0\n  );\n  const dodgedParticlesDestination = dodge(\n    particles,\n    props.dateSelection,\n    props.valueSelection,\n    x(particles, props.dateSelection),\n    r,\n    0\n  );\n\n  const tooltip =\n    isBrowser() &&\n    d3\n      .select(\"#tooltipDiv\")\n      .style(\"background-color\", \"white\")\n      .style(\"border-radius\", \"2px\")\n      .style(\n        \"box-shadow\",\n        \"0 3px 6px rgba(0, 0, 0, 0.3), 0 3px 6px rgba(0, 0, 0, 0.4)\"\n      )\n      .style(\"opacity\", 0)\n      .style(\"padding\", \"5px\")\n      .style(\"z-index\", 1000000);\n\n\n  function showTooltip(tooltipX, tooltipY, readableValue, readableDate, readableFullDate) {\n    isBrowser() &&\n      tooltip\n        .style(\"opacity\", 0.7)\n        .style(\"display\", \"block\")\n        .style(\"top\", tooltipY + \"px\")\n        .style(\"left\", tooltipX +30 -margin+ \"px\")\n        .style(\"z-index\", 500000)\n        .html(\n         `<div class =\"swarmTooltipText\">\n          <div>words written: <b>${readableValue}</b></div>\n          <div>${props.dateSelection}: <b>${readableDate}</b></div>\n          <div><b>${readableFullDate}</b></div>\n          </div>`\n        );\n  }\n\n  const delaunay2 = (dateString, x, y) =>\n    Delaunay.from(dodgedParticlesDestination.map((d) => [d.x, d.y]));\n\n  const xAxisScale = d3\n    .scaleSequential()\n    .domain(d3.extent(particles, (d) => d[props.dateSelection]))\n    .range([margin, width - margin]);\n\n  const xAxis = d3\n    .axisBottom(xAxisScale)\n    .ticks(5)\n    .tickFormat((d) => `${d}`);\n\n  useEffect(() => {\n    //************************************************************\n    // ***** Scale Canvas and prep\n    // ***********************************************************\n    const canvas = ref.current;\n    const context = canvas.getContext(\"2d\");\n    context.scale(pixelRatio, pixelRatio);\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    context.globalAlpha = .8;\n    //************************************************************\n    // ***** End Scale Canvas and prep\n    // ***********************************************************\n\n    const update = () => {\n      context.fillStyle = \"rgb(226, 99, 255)\";\n      context.strokeStyle = \"rgb(226, 99, 255)\";\n\n      const animation = () =>\n        gsap.fromTo(\n          dodgedParticlesOrigin,\n          {\n            x: (index) => dodgedParticlesOrigin[index].x,\n            y: (index) => dodgedParticlesOrigin[index].y,\n          },\n          {\n            x: (index) => dodgedParticlesDestination[index].x,\n            y: (index) => dodgedParticlesDestination[index].y,\n            // ease: \"power.3.out\",\n            duration: 0.5,\n\n            // Documentation: https://greensock.com/docs/v3/Staggers\n            ease: \"strong.inOut\",\n            // runBackwards: true,\n            onUpdate: animate,\n\n            stagger: {\n              each: 0.0005,\n              from: \"random\",\n            },\n          }\n        );\n\n      animation();\n\n      function animate() {\n        context.restore();\n\n        context.clearRect(0, 0, width, height);\n\n        d3.select(axisRef.current).call(xAxis).transition();\n        context.beginPath();\n        dodgedParticlesOrigin.map(\n          (d, i) => (\n            context.beginPath(),\n            context.arc(d.x-margin, height - d.y, d.r, 0, 2 * Math.PI),\n            // context.stroke()\n            context.fill()\n          )\n        );\n      }\n    };\n\n    onscroll = (event) => {\n      pointHoverOut();\n    };\n\n    const pointHoverIn = (hoverActive) => {\n\n      let xSelection = hoverActive.x - margin;\n\n      let ySelection = hoverActive.y;\n\n      d3.select(highlightRef.current)\n        .attr(\"r\", hoverActive.r + .5)\n        .attr(\"cx\", xSelection)\n        .attr(\"cy\", height - ySelection )\n        .attr(\"fill\", \"rgba(255, 255, 255,1)\");\n    };\n\n    const pointHoverOut = () => {\n      d3.select(highlightRef.current).attr(\"r\", 0);\n    };\n\n    function hideTooltip(hoverInactive) {\n      isBrowser && tooltip.style(\"display\", \"none\");\n      isBrowser && tooltip.style(\"opacity\", \"0\");\n    }\n    onmousemove = (event) => {\n      event.preventDefault();\n      const pageYoffset = window.pageYOffset;\n      console.log(\"offset\", pageYoffset)\n      let mousePoint = d3.pointer(event, this);\n      let xi = mousePoint[0] +  margin;\n      let y = height - mousePoint[1] + pageYoffset;\n      let heightCond = xi < width;\n      let index = delaunay2(props.dateSelection).find(xi, y);\n      console.log(index)\n      let indexObj = dodgedParticlesDestination[index];\n      console.log(indexObj)\n      let tooltipX = indexObj.x;\n      let tooltipY = height - indexObj.y;\n      let tooltipLegibleValue = indexObj.data[props.valueSelection];\n      let tooltipLegibleSelectedDate = indexObj.data[props.dateSelection];\n      let tooltipLegibleDate = indexObj.data.date;\n\n\n\n      heightCond\n        ? showTooltip(\n            tooltipX,\n            tooltipY,\n            tooltipLegibleValue,\n            tooltipLegibleSelectedDate,\n            tooltipLegibleDate\n          )\n        : hideTooltip(indexObj);\n\n      heightCond ? pointHoverIn(indexObj) : pointHoverOut(indexObj);\n    };\n\n    update();\n  }, [props.dateSelection, props.width, props.height, props.pixelRatio]);\n\n  if (isBrowser() === false) {\n    return <></>;\n  }\n  return (\n    <div className=\"canvasStickyChartContainer\">\n      <div id=\"tooltipDiv\" className=\"tooltipDiv\" />\n\n      <svg className=\"canvasStickyPointHighlight\" width={width} height={height}>\n        <circle r={0} className=\"highlightCircle\" ref={highlightRef}></circle>\n      </svg>\n      <canvas\n        className={\"canvasStickyChart\"}\n        style={{\n          width: props.width + \"px\",\n          height: props.height + \"px\",\n        }}\n        ref={ref}\n        particles={props.particles}\n        stroke={props.stroke}\n        width={props.width * props.pixelRatio}\n        height={props.height * props.pixelRatio}\n        useScrollData={props.useScrollData}\n        dateSelection={props.dateSelection}\n        valueSelection={props.valueSelection}\n        margin={props.margin}\n      />\n      <svg style={{ top: props.height - 1 }} className=\"canvasStickyChartAxis\">\n        <g className=\"darkModeAxis\" ref={axisRef}></g>\n      </svg>\n    </div>\n  );\n};\n\nexport default ScrollySwarm;\n","import React, { useState } from \"react\";\nimport ScrollySwarm from \"../components/ScrollySwarm\";\nimport { useScrollData } from \"scroll-data-hook\";\nimport debounce from \"debounce\";\nimport { Scrollama, Step } from \"react-scrollama\";\nimport { graphql } from \"gatsby\";\nimport \"../styles.css\";\nimport { isBrowser } from \"../utils/staticRendering\";\nimport { scatterScrollingtext } from \"../utils/childhoodDiaryUtils\";\nimport { formatDataFunct } from \"../utils/childhoodDiaryUtils\";\n// import * as Scroll from 'react-scroll';\n\nconst ScrollySwarmPage = ({ data }) => {\n  const diaryRawData = data.allDataCsv.edges[0].node.items;\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n  const [pixelRatio, setPixelRatio] = useState(\n    isBrowser() ? window.devicePixelRatio : 0\n  );\n  const [currentWidth, setCurrentWidth] = useState(\n    isBrowser() ? window.innerWidth : 0\n  );\n  const [currentHeight, setCurrentHeight] = useState(\n    isBrowser() ? window.innerHeight : 0\n  );\n  const onStepEnter = (stepdata) => {\n    setCurrentStepIndex(stepdata.data);\n  };\n\n  React.useEffect(() => {\n    if (isBrowser()) {\n      setCurrentWidth(window.innerWidth);\n      setCurrentHeight(window.innerHeight);\n      setPixelRatio(window.devicePixelRatio);\n      window.onresize = function (event) {\n        setCurrentWidth(window.innerWidth);\n        setCurrentHeight(window.innerHeight);\n        setPixelRatio(window.devicePixelRatio);\n      };\n    }\n  }, [currentWidth, pixelRatio]);\n\n  if (isBrowser() === false) {\n    return <></>;\n  }\n\n  return (\n    <div>\n      <div>\n        <ScrollySwarm\n          className={\"staticGraphicContainer\"}\n          height={currentHeight * 0.95}\n          width={currentWidth * 0.6}\n          particles={formatDataFunct(diaryRawData)}\n          useScrollData={useScrollData}\n          dateSelection={scatterScrollingtext(currentStepIndex).date_selection}\n          valueSelection=\"entry_word_count\"\n          stepIndex={currentStepIndex}\n          margin={45}\n          marginLeft={currentWidth * 0.1}\n          marginTop={currentHeight * 0.7}\n          pixelRatio={pixelRatio}\n        />\n\n        <div className=\"scrollingTextContainer darkModeScrollingTitle\">\n          <Scrollama\n            offset={.5}\n            onStepEnter={onStepEnter}\n            debug={false}\n          >\n            {[0, 1, 2].map((_, stepIndex) => (\n              <Step data={stepIndex} key={stepIndex}>\n                <div\n                  style={{ opacity: currentStepIndex === stepIndex ? 1 : 0.2 }}\n                  class=\"textStep\"\n                >\n                  {scatterScrollingtext(stepIndex).title}\n                </div>\n              </Step>\n            ))}\n          </Scrollama>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query ScrollySwarmPage {\n    allDataCsv {\n      edges {\n        node {\n          items {\n            date\n            formatted_date\n            entry_word_count\n            quarter\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ScrollySwarmPage\n","export const dodge = (data, selectedDateI, selectedValueI, xScaleI, rScaleI, paddingI) => {\n  const circles = data\n    .map((d) => ({ x: xScaleI(d[selectedDateI]), r: rScaleI(d[selectedValueI]), data: d }))\n    // .sort((a, b) => b.r - a.r);\n\n  const epsilon = 1e-3;\n  let head = null,\n    tail = null,\n    queue = null;\n\n  //   // Returns true if circle ⟨x,y⟩ intersects with any circle in the queue.\n  function intersects(x, y, r) {\n    let a = head;\n    while (a) {\n      const radius2 = (a.r + r + paddingI) ** 2;\n      if (radius2 - epsilon > (a.x - x) ** 2 + (a.y - y) ** 2) {\n        return true;\n      }\n      a = a.next;\n    }\n    return false;\n  }\n\n  //   // Place each circle sequentially.\n  for (const b of circles) {\n    //     // Choose the minimum non-intersecting tangent.\n    if (intersects(b.x, (b.y = b.r), b.r)) {\n      let a = head;\n      b.y = Infinity;\n      do {\n        let y =\n          a.y + Math.sqrt((a.r + b.r + paddingI) ** 2 - (a.x - b.x) ** 2);\n        if (y < b.y && !intersects(b.x, y, b.r)) b.y = y;\n        a = a.next;\n      } while (a);\n    }\n\n    //     // Add b to the queue.\n    b.next = null;\n    if (head === null) {\n      head = tail = b;\n      queue = head;\n    } else tail = tail.next = b;\n  }\n\n  return circles;\n};\n"],"names":["props","pixelRatio","height","width","margin","marginLeft","particles","marginTop","ref","useRef","highlightRef","axisRef","prevDate","value","defaultRef","useEffect","current","usePrevious","dateSelection","rScale","d3","domain","d","valueSelection","range","x","incomingData","prevOrCurrent","r","selectedValue","dodgedParticlesOrigin","dodge","dodgedParticlesDestination","tooltip","isBrowser","style","xAxisScale","xAxis","ticks","tickFormat","context","getContext","scale","setTransform","globalAlpha","onscroll","event","pointHoverOut","attr","onmousemove","preventDefault","pageYoffset","window","pageYOffset","console","log","mousePoint","xi","y","heightCond","index","Delaunay","map","find","indexObj","hoverActive","xSelection","ySelection","tooltipX","tooltipY","tooltipLegibleValue","data","tooltipLegibleSelectedDate","tooltipLegibleDate","date","readableValue","readableDate","readableFullDate","html","showTooltip","fillStyle","strokeStyle","animate","restore","clearRect","call","transition","beginPath","i","arc","Math","PI","fill","gsap","duration","ease","onUpdate","stagger","each","from","update","className","id","stroke","useScrollData","top","diaryRawData","allDataCsv","edges","node","items","useState","currentStepIndex","setCurrentStepIndex","devicePixelRatio","setPixelRatio","innerWidth","currentWidth","setCurrentWidth","innerHeight","currentHeight","setCurrentHeight","React","onresize","formatDataFunct","scatterScrollingtext","date_selection","stepIndex","offset","onStepEnter","stepdata","debug","_","key","opacity","class","title","selectedDateI","selectedValueI","xScaleI","rScaleI","paddingI","circles","head","tail","intersects","a","next","b","Infinity","sqrt"],"sourceRoot":""}